
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE ID LPAREN MINUS NUMBER PLUS RPAREN TIMES\n    expression : PLUS expression term\n               | MINUS expression term\n               | DIVIDE expression term\n    \n    expression : TIMES expression term\n    \n    expression : term\n    \n    term : factor\n    \n    factor : NUMBER\n    \n    factor : ID\n    \n    factor : LPAREN expression RPAREN\n    '
    
_lr_action_items = {'PLUS':([0,2,4,5,6,10,],[2,2,2,2,2,2,]),'MINUS':([0,2,4,5,6,10,],[4,4,4,4,4,4,]),'DIVIDE':([0,2,4,5,6,10,],[5,5,5,5,5,5,]),'TIMES':([0,2,4,5,6,10,],[6,6,6,6,6,6,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,],[8,8,-5,8,8,8,-6,-7,-8,8,8,8,8,8,-1,-2,-3,-4,-9,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,],[9,9,-5,9,9,9,-6,-7,-8,9,9,9,9,9,-1,-2,-3,-4,-9,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,],[10,10,-5,10,10,10,-6,-7,-8,10,10,10,10,10,-1,-2,-3,-4,-9,]),'$end':([1,3,7,8,9,16,17,18,19,20,],[0,-5,-6,-7,-8,-1,-2,-3,-4,-9,]),'RPAREN':([3,7,8,9,15,16,17,18,19,20,],[-5,-6,-7,-8,20,-1,-2,-3,-4,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,4,5,6,10,],[1,11,12,13,14,15,]),'term':([0,2,4,5,6,10,11,12,13,14,],[3,3,3,3,3,3,16,17,18,19,]),'factor':([0,2,4,5,6,10,11,12,13,14,],[7,7,7,7,7,7,7,7,7,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> PLUS expression term','expression',3,'p_expression','parser.py',7),
  ('expression -> MINUS expression term','expression',3,'p_expression','parser.py',8),
  ('expression -> DIVIDE expression term','expression',3,'p_expression','parser.py',9),
  ('expression -> TIMES expression term','expression',3,'p_expression_times','parser.py',15),
  ('expression -> term','expression',1,'p_expression_term','parser.py',21),
  ('term -> factor','term',1,'p_term_factor','parser.py',27),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',33),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',39),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_grouped','parser.py',45),
]
