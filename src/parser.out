Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> PLUS expression term
Rule 2     expression -> MINUS expression term
Rule 3     expression -> DIVIDE expression term
Rule 4     expression -> TIMES expression term
Rule 5     expression -> term
Rule 6     term -> factor
Rule 7     factor -> NUMBER
Rule 8     factor -> ID
Rule 9     factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

DIVIDE               : 3
ID                   : 8
LPAREN               : 9
MINUS                : 2
NUMBER               : 7
PLUS                 : 1
RPAREN               : 9
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 4 9 0
factor               : 6
term                 : 1 2 3 4 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . PLUS expression term
    (2) expression -> . MINUS expression term
    (3) expression -> . DIVIDE expression term
    (4) expression -> . TIMES expression term
    (5) expression -> . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 2
    MINUS           shift and go to state 4
    DIVIDE          shift and go to state 5
    TIMES           shift and go to state 6
    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    expression                     shift and go to state 1
    term                           shift and go to state 3
    factor                         shift and go to state 7

state 1

    (0) S' -> expression .



state 2

    (1) expression -> PLUS . expression term
    (1) expression -> . PLUS expression term
    (2) expression -> . MINUS expression term
    (3) expression -> . DIVIDE expression term
    (4) expression -> . TIMES expression term
    (5) expression -> . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 2
    MINUS           shift and go to state 4
    DIVIDE          shift and go to state 5
    TIMES           shift and go to state 6
    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    expression                     shift and go to state 11
    term                           shift and go to state 3
    factor                         shift and go to state 7

state 3

    (5) expression -> term .

    $end            reduce using rule 5 (expression -> term .)
    NUMBER          reduce using rule 5 (expression -> term .)
    ID              reduce using rule 5 (expression -> term .)
    LPAREN          reduce using rule 5 (expression -> term .)
    RPAREN          reduce using rule 5 (expression -> term .)


state 4

    (2) expression -> MINUS . expression term
    (1) expression -> . PLUS expression term
    (2) expression -> . MINUS expression term
    (3) expression -> . DIVIDE expression term
    (4) expression -> . TIMES expression term
    (5) expression -> . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 2
    MINUS           shift and go to state 4
    DIVIDE          shift and go to state 5
    TIMES           shift and go to state 6
    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    expression                     shift and go to state 12
    term                           shift and go to state 3
    factor                         shift and go to state 7

state 5

    (3) expression -> DIVIDE . expression term
    (1) expression -> . PLUS expression term
    (2) expression -> . MINUS expression term
    (3) expression -> . DIVIDE expression term
    (4) expression -> . TIMES expression term
    (5) expression -> . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 2
    MINUS           shift and go to state 4
    DIVIDE          shift and go to state 5
    TIMES           shift and go to state 6
    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    expression                     shift and go to state 13
    term                           shift and go to state 3
    factor                         shift and go to state 7

state 6

    (4) expression -> TIMES . expression term
    (1) expression -> . PLUS expression term
    (2) expression -> . MINUS expression term
    (3) expression -> . DIVIDE expression term
    (4) expression -> . TIMES expression term
    (5) expression -> . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 2
    MINUS           shift and go to state 4
    DIVIDE          shift and go to state 5
    TIMES           shift and go to state 6
    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    expression                     shift and go to state 14
    term                           shift and go to state 3
    factor                         shift and go to state 7

state 7

    (6) term -> factor .

    $end            reduce using rule 6 (term -> factor .)
    NUMBER          reduce using rule 6 (term -> factor .)
    ID              reduce using rule 6 (term -> factor .)
    LPAREN          reduce using rule 6 (term -> factor .)
    RPAREN          reduce using rule 6 (term -> factor .)


state 8

    (7) factor -> NUMBER .

    $end            reduce using rule 7 (factor -> NUMBER .)
    NUMBER          reduce using rule 7 (factor -> NUMBER .)
    ID              reduce using rule 7 (factor -> NUMBER .)
    LPAREN          reduce using rule 7 (factor -> NUMBER .)
    RPAREN          reduce using rule 7 (factor -> NUMBER .)


state 9

    (8) factor -> ID .

    $end            reduce using rule 8 (factor -> ID .)
    NUMBER          reduce using rule 8 (factor -> ID .)
    ID              reduce using rule 8 (factor -> ID .)
    LPAREN          reduce using rule 8 (factor -> ID .)
    RPAREN          reduce using rule 8 (factor -> ID .)


state 10

    (9) factor -> LPAREN . expression RPAREN
    (1) expression -> . PLUS expression term
    (2) expression -> . MINUS expression term
    (3) expression -> . DIVIDE expression term
    (4) expression -> . TIMES expression term
    (5) expression -> . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 2
    MINUS           shift and go to state 4
    DIVIDE          shift and go to state 5
    TIMES           shift and go to state 6
    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    expression                     shift and go to state 15
    term                           shift and go to state 3
    factor                         shift and go to state 7

state 11

    (1) expression -> PLUS expression . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    term                           shift and go to state 16
    factor                         shift and go to state 7

state 12

    (2) expression -> MINUS expression . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    term                           shift and go to state 17
    factor                         shift and go to state 7

state 13

    (3) expression -> DIVIDE expression . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    term                           shift and go to state 18
    factor                         shift and go to state 7

state 14

    (4) expression -> TIMES expression . term
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . ID
    (9) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    ID              shift and go to state 9
    LPAREN          shift and go to state 10

    term                           shift and go to state 19
    factor                         shift and go to state 7

state 15

    (9) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 20


state 16

    (1) expression -> PLUS expression term .

    $end            reduce using rule 1 (expression -> PLUS expression term .)
    NUMBER          reduce using rule 1 (expression -> PLUS expression term .)
    ID              reduce using rule 1 (expression -> PLUS expression term .)
    LPAREN          reduce using rule 1 (expression -> PLUS expression term .)
    RPAREN          reduce using rule 1 (expression -> PLUS expression term .)


state 17

    (2) expression -> MINUS expression term .

    $end            reduce using rule 2 (expression -> MINUS expression term .)
    NUMBER          reduce using rule 2 (expression -> MINUS expression term .)
    ID              reduce using rule 2 (expression -> MINUS expression term .)
    LPAREN          reduce using rule 2 (expression -> MINUS expression term .)
    RPAREN          reduce using rule 2 (expression -> MINUS expression term .)


state 18

    (3) expression -> DIVIDE expression term .

    $end            reduce using rule 3 (expression -> DIVIDE expression term .)
    NUMBER          reduce using rule 3 (expression -> DIVIDE expression term .)
    ID              reduce using rule 3 (expression -> DIVIDE expression term .)
    LPAREN          reduce using rule 3 (expression -> DIVIDE expression term .)
    RPAREN          reduce using rule 3 (expression -> DIVIDE expression term .)


state 19

    (4) expression -> TIMES expression term .

    $end            reduce using rule 4 (expression -> TIMES expression term .)
    NUMBER          reduce using rule 4 (expression -> TIMES expression term .)
    ID              reduce using rule 4 (expression -> TIMES expression term .)
    LPAREN          reduce using rule 4 (expression -> TIMES expression term .)
    RPAREN          reduce using rule 4 (expression -> TIMES expression term .)


state 20

    (9) factor -> LPAREN expression RPAREN .

    $end            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (factor -> LPAREN expression RPAREN .)

