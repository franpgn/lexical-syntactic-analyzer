Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> LPAREN PLUS expression expression RPAREN
Rule 2     expression -> LPAREN MINUS expression expression RPAREN
Rule 3     expression -> LPAREN MULT expression expression RPAREN
Rule 4     expression -> LPAREN DIV expression expression RPAREN
Rule 5     expression -> ID
Rule 6     expression -> NUMBER

Terminals, with rules where they appear

DIV                  : 4
ID                   : 5
LPAREN               : 1 2 3 4
MINUS                : 2
MULT                 : 3
NUMBER               : 6
PLUS                 : 1
RPAREN               : 1 2 3 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 3 4 4 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> LPAREN . PLUS expression expression RPAREN
    (2) expression -> LPAREN . MINUS expression expression RPAREN
    (3) expression -> LPAREN . MULT expression expression RPAREN
    (4) expression -> LPAREN . DIV expression expression RPAREN

    PLUS            shift and go to state 5
    MINUS           shift and go to state 6
    MULT            shift and go to state 7
    DIV             shift and go to state 8


state 3

    (5) expression -> ID .

    $end            reduce using rule 5 (expression -> ID .)
    LPAREN          reduce using rule 5 (expression -> ID .)
    ID              reduce using rule 5 (expression -> ID .)
    NUMBER          reduce using rule 5 (expression -> ID .)
    RPAREN          reduce using rule 5 (expression -> ID .)


state 4

    (6) expression -> NUMBER .

    $end            reduce using rule 6 (expression -> NUMBER .)
    LPAREN          reduce using rule 6 (expression -> NUMBER .)
    ID              reduce using rule 6 (expression -> NUMBER .)
    NUMBER          reduce using rule 6 (expression -> NUMBER .)
    RPAREN          reduce using rule 6 (expression -> NUMBER .)


state 5

    (1) expression -> LPAREN PLUS . expression expression RPAREN
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 9

state 6

    (2) expression -> LPAREN MINUS . expression expression RPAREN
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 10

state 7

    (3) expression -> LPAREN MULT . expression expression RPAREN
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 11

state 8

    (4) expression -> LPAREN DIV . expression expression RPAREN
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 12

state 9

    (1) expression -> LPAREN PLUS expression . expression RPAREN
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 13

state 10

    (2) expression -> LPAREN MINUS expression . expression RPAREN
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 14

state 11

    (3) expression -> LPAREN MULT expression . expression RPAREN
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 15

state 12

    (4) expression -> LPAREN DIV expression . expression RPAREN
    (1) expression -> . LPAREN PLUS expression expression RPAREN
    (2) expression -> . LPAREN MINUS expression expression RPAREN
    (3) expression -> . LPAREN MULT expression expression RPAREN
    (4) expression -> . LPAREN DIV expression expression RPAREN
    (5) expression -> . ID
    (6) expression -> . NUMBER

    LPAREN          shift and go to state 2
    ID              shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 16

state 13

    (1) expression -> LPAREN PLUS expression expression . RPAREN

    RPAREN          shift and go to state 17


state 14

    (2) expression -> LPAREN MINUS expression expression . RPAREN

    RPAREN          shift and go to state 18


state 15

    (3) expression -> LPAREN MULT expression expression . RPAREN

    RPAREN          shift and go to state 19


state 16

    (4) expression -> LPAREN DIV expression expression . RPAREN

    RPAREN          shift and go to state 20


state 17

    (1) expression -> LPAREN PLUS expression expression RPAREN .

    $end            reduce using rule 1 (expression -> LPAREN PLUS expression expression RPAREN .)
    LPAREN          reduce using rule 1 (expression -> LPAREN PLUS expression expression RPAREN .)
    ID              reduce using rule 1 (expression -> LPAREN PLUS expression expression RPAREN .)
    NUMBER          reduce using rule 1 (expression -> LPAREN PLUS expression expression RPAREN .)
    RPAREN          reduce using rule 1 (expression -> LPAREN PLUS expression expression RPAREN .)


state 18

    (2) expression -> LPAREN MINUS expression expression RPAREN .

    $end            reduce using rule 2 (expression -> LPAREN MINUS expression expression RPAREN .)
    LPAREN          reduce using rule 2 (expression -> LPAREN MINUS expression expression RPAREN .)
    ID              reduce using rule 2 (expression -> LPAREN MINUS expression expression RPAREN .)
    NUMBER          reduce using rule 2 (expression -> LPAREN MINUS expression expression RPAREN .)
    RPAREN          reduce using rule 2 (expression -> LPAREN MINUS expression expression RPAREN .)


state 19

    (3) expression -> LPAREN MULT expression expression RPAREN .

    $end            reduce using rule 3 (expression -> LPAREN MULT expression expression RPAREN .)
    LPAREN          reduce using rule 3 (expression -> LPAREN MULT expression expression RPAREN .)
    ID              reduce using rule 3 (expression -> LPAREN MULT expression expression RPAREN .)
    NUMBER          reduce using rule 3 (expression -> LPAREN MULT expression expression RPAREN .)
    RPAREN          reduce using rule 3 (expression -> LPAREN MULT expression expression RPAREN .)


state 20

    (4) expression -> LPAREN DIV expression expression RPAREN .

    $end            reduce using rule 4 (expression -> LPAREN DIV expression expression RPAREN .)
    LPAREN          reduce using rule 4 (expression -> LPAREN DIV expression expression RPAREN .)
    ID              reduce using rule 4 (expression -> LPAREN DIV expression expression RPAREN .)
    NUMBER          reduce using rule 4 (expression -> LPAREN DIV expression expression RPAREN .)
    RPAREN          reduce using rule 4 (expression -> LPAREN DIV expression expression RPAREN .)

